package edu.cmu.inmind.composition;

import edu.cmu.inmind.composition.common.ServiceMethod;
import edu.cmu.inmind.composition.common.Utils;
import edu.cmu.inmind.composition.controllers.CompositionController;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

/**
 * Created by oscarr on 8/8/18.
 */
public class Main {

    public static void main(String args[]){

        // let's generate the corpora using service method descriptions:
        Map<String, ServiceMethod> serviceMap = Utils.generateCorporaFromMethods();

        // let's get some inputs from the user and generate rules for abstract services
        InputController inputController = new InputController(true);
        System.out.println("Enter your high level goal/plan:");
        CompositionController.init();
        CompositionController.addGoal( inputController.getNext() );
        String step;
        while(true){
            System.out.println("Enter one by one each step to accomplish the goal (type 'END' to finish):");
            step = inputController.getNext();
            if( step.equals("END") ) break;
            CompositionController.addStep( step);

            // let's create a composite service using the abstract services
            CompositionController.CompositeService compositeService = CompositionController.generateCompositeServiceRequest();
            CompositionController.fireRulesAS();

            // let's generate an input text file using the composite service (this is an iput for sent2vec)
            Utils.generateInputText(compositeService);

            // let's create some rules for grounding specific services:
            CompositionController.addPhoneStatusToWM();
            CompositionController.createRulesForGroundingServices();


            // once the service composition is generated by fasttext, then we execute services
            // using the serviceMap:
            // ....
            CompositionController.execute(compositeService, serviceMap, Utils.getAbstractServices());
        }
    }


    /**
     * It uses either a script or get input from keyboard
     */
    static class InputController{
        private boolean usePredefinedList = true;
        private List<String> predefinedList = Arrays.asList(new String[]{
                "plan a trip to Boston",
                "Check availability from Labor day to President day",
                "Search cheap flights",
                "Book a flight",
                "Search nice and affordable hotels",
                "Book a hotel",
                "Check weather",
                "plan indoor activities",
                "END"
                });
        private int idx = 0;
        private Scanner scanner = new Scanner(System.in);

        public InputController(boolean usePredefinedList) {
            this.usePredefinedList = usePredefinedList;
        }

        public String getNext() {
            if(usePredefinedList){
                System.out.println("*** " + predefinedList.get(idx));
                return predefinedList.get(idx++);
            }
            return scanner.nextLine();
        }
    }


}
